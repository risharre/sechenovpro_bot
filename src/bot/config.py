"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import os
from typing import List, Optional
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


class Config:
    """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    BOT_TOKEN: str = os.getenv("BOT_TOKEN", "")
    
    # Supabase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    SUPABASE_URL: str = os.getenv("SUPABASE_URL", "")
    SUPABASE_KEY: str = os.getenv("SUPABASE_KEY", "")
    
    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (–ø–æ username –≤ Telegram)
    ADMIN_USERNAMES: List[str] = [
        username.strip().replace("@", "").lower() 
        for username in os.getenv("ADMIN_USERNAMES", "").split(",") 
        if username.strip()
    ]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º—ã CV
    CV_FORM_URL: str = os.getenv("CV_FORM_URL", "https://forms.yandex.ru/cloud/67d6fd5090fa7be3dc213e5f/")
    
    # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    LOG_LEVEL: str = os.getenv("LOG_LEVEL", "INFO")
    PORT: int = int(os.getenv("PORT", "8000"))
    BATCH_SIZE: int = int(os.getenv("BATCH_SIZE", "30"))
    RETRY_ATTEMPTS: int = int(os.getenv("RETRY_ATTEMPTS", "3"))
    
    # üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (—Å —É—á–µ—Ç–æ–º –ø–µ—Ä–µ—Ö–æ–¥–æ–≤)
    STATION_DURATION_MINUTES: int = 6  # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏
    TRANSITION_DURATION_MINUTES: int = 2  # –í—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å—Ç–∞–Ω—Ü–∏—è–º–∏
    TOTAL_CYCLE_MINUTES: int = 8  # –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: 6 –º–∏–Ω —Ä–∞–±–æ—Ç–∞ + 2 –º–∏–Ω –ø–µ—Ä–µ—Ö–æ–¥
    TOTAL_STATIONS: int = 9
    MAX_PARTICIPANTS: int = 150
    
    # –†–∞—Å—á–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    @property
    def TOTAL_EVENT_DURATION_MINUTES(self) -> int:
        """–û–±—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
        return (self.TOTAL_STATIONS * self.STATION_DURATION_MINUTES + 
                (self.TOTAL_STATIONS - 1) * self.TRANSITION_DURATION_MINUTES)  # 70 –º–∏–Ω—É—Ç
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    ROUTES_CSV_PATH: str = "data/routes.csv"
    STATIONS_CONFIG_PATH: str = "stations_config.json"
    
    @classmethod
    def validate(cls) -> None:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        required_fields = [
            ("BOT_TOKEN", cls.BOT_TOKEN),
            ("SUPABASE_URL", cls.SUPABASE_URL),
            ("SUPABASE_KEY", cls.SUPABASE_KEY),
        ]
        
        missing_fields = [
            field_name for field_name, field_value in required_fields 
            if not field_value
        ]
        
        if missing_fields:
            raise ValueError(
                f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_fields)}"
            )
        
        if not cls.ADMIN_USERNAMES:
            raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ ADMIN_USERNAMES")
    
    @classmethod
    def is_admin(cls, telegram_username: Optional[str]) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ username"""
        if not telegram_username:
            return False
        
        # –£–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        clean_username = telegram_username.replace("@", "").lower()
        return clean_username in cls.ADMIN_USERNAMES


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
try:
    Config.validate()
except ValueError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    exit(1) 